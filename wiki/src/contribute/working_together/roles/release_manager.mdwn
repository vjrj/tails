[[!meta title="Release Manager"]]

# Tasks

## In the beginning of your shift

- Send the release schedule to <tails-dev@boum.org> and
  <tails-l10n@boum.org>. Use the [Mozilla release
  calendar](https://wiki.mozilla.org/RapidRelease/Calendar).
  Ask the core team and contributors for availability at the
  dates designated for testing the RC and final image.
- Update [[contribute/calendar]] accordingly.
- Update the due date on [[!tails_roadmap]] accordingly.
- Ask to be added to the `rsync_tails` group on `rsync.lizard`,
  if needed.
- Make sure you have access to the various systems used to do
  the release.

## Around two weeks before the freeze

- Have a look at recent changes
  in [Torbutton](https://gitweb.torproject.org/torbutton.git), and
  do whatever is needed to get the fixes we need in the release.
- Have Kill Your TV upgrade I2P if needed. See [[contribute/design/I2P]].

## Continuously

The RM is still the fallback for reviewing'n'merging stuff relatively
promptly. If a ticket is flagged "Ready for QA", but the RM cannot or
doesn't want to take care of the review'n'merge, it's the RM's
responsibility to ask for help. The "Release Manager View" is probably
the best place to track such tickets.

## Make the release happen

No kidding. See [[contribute/release_process]].

# Shifts

The release manager shifts could be done by a team. They start right after the
publication of the previous release to the publication and announcement of the
release they are taking care of, which should be 6 weeks long if everything goes
fine.

# Tools

On Redmine:

* [Release Manager View](https://labs.riseup.net/code/projects/tails/issues?query_id=130)
* [Ready for QA](https://labs.riseup.net/code/projects/tails/issues?query_id=117)

[[!meta title="Vagrant"]]

Tails can be [[built|contribute/build]] in a virtual machine that is managed
using [Vagrant]. Here lies more details on how Tails uses Vagrant, its
configuration, and how to create and upload the template virtual machine.

[Vagrant]: http://vagrantup.com/

Configuration
=============

Vagrant support files are located in the `vagrant` directory at the root of the
[[amnesia.git|contribute/git]] repository.

This directory contains:

 * `Vagrantfile`: [configuration file for Vagrant](http://vagrantup.com/docs/vagrantfile.html],
 * `provision/setup-tails-builder`: idempotent provisioning script that is
   run inside the virtual machine upon boot,
 * `provision/assets/build-tails`: build script to be run inside the
   virtual machine,
 * to build the Squeeze *base box*:
   - `definitions/squeeze/definition.rb`: Veewee configuration,
   - `definitions/squeeze/preseed.cfg`: preseed file used by the debian-installer,
   - `definitions/squeeze/postinstall.sh`: script run on first boot of the
     *base box*.

We choose to use the [Shell
provisioner](http://vagrantup.com/docs/provisioners/shell.html), as long as we
make this script reentrant it will lower the learning curve for contributors
not familiar with Puppet or Chef.

The Vagrantfile will share the `.git` directory of the local clone of the
repository. This is done to overcome limitations of VirtualBox shared folders
(namely *symlink support*). The build script will clone (and fetch further
changes) that "bare" repository.

Creating the *base box*
=======================

The creation of the *base box* is fully automated using a tool
called [Veewee].

[Veewee]: https://github.com/jedi4ever/veewee

Installing the requirements
---------------------------

Debian packages:

    sudo apt-get install ruby ruby-dev rubygems build-essential libxslt1-dev \
                 libxml2-dev virtualbox linux-headers-amd64

Veewee isn't packaged in Debian, so we install the Ruby Gem as the
user that is gonna build the basebox:

    gem install --user --no-ri --no-rdoc veewee

Update the distributed *base box*
---------------------------------

After issuing the commands below, Veewee will download the boot ISO
image, drive the debian-installer using
[preeseding](https://www.debian.org/releases/stable/i386/apbs02.html)
and run `postinstall.sh` to take care of seting up the environment
expected by Vagrant.

    ORIG_BOXNAME=tails-builder
    DATE="$(date +%Y%m%d)"
    BOXNAME="${ORIG_BOXNAME}-${DATE}"
    sed -i "s/tails-builder-[0-9]\{8\}/${BOXNAME}/" vagrant/Vagrantfile
    mkdir -p "${VEEWEE_SRC}"/definitions
    cp -a vagrant/definitions/${ORIG_BOXNAME}" vagrant/definitions/${BOXNAME}"
    veewee vbox build "${BOXNAME}"
    vboxmanage controlvm "${BOXNAME}" acpipowerbutton

Wait until VM shuts down, then:

    veewee vbox export "${BOXNAME}"
    vboxmanage unregistervm "${BOXNAME}" --delete
    rm -rf definitions/"${BOXNAME}"
    CHECKSUM="$(sha256sum ${BOXNAME}.box | grep -o '^\w\+')"
    sed -i -e "s/^BOX_CHECKSUM = .*$/BOX_CHECKSUM = '${CHECKSUM}'/" \
           vagrant/lib/tails_build_settings.rb
    sed -i "s/tails-builder-[0-9]\{8\}/${BOXNAME}/" \
           vagrant/lib/tails_build_settings.rb vagrant/Vagrantfile
    git commit vagrant -m "Updated Vagrant basebox."

Then `$BOXNAME.box` will be placed in tails source root,
and all needed changes committed to the current checked out branch in
Tails sources. The basebox should be uploaded to the Tails mirrors at
`http://dl.amnesia.boum.org/tails/project/vagrant/$BOXNAME.box`, as
define defined in `vagrant/Vagrantfile`.

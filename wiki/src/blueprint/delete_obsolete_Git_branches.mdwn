Corresponding ticket: [[!tails_ticket 8616]], that's a blocker for [[!tails_ticket 8617]].

Questions that we have before we actually implement what we want to do are.

The requirements are:

* At which point do we remove merged Git branches?
* Removing obsolete Git branches
* Who removes these Git branches?
* What kind of privileges are required to do that?

#### At which point do we remove merged Git branches

After a new Tails release has been shipped, we should review which Git branches has been merged in the release and remove them accordingly. This will make sure that we keep a clean-ish Git repository for a new release cycle.

#### Removing obsolete Git Branches

XXX (Is there a distinction between obsolete git branches and merged git branches? E.g, are there branches that we haven't merged but people haven't touched in months? Should we even delete those without warning?)

Merged branches from Tails developers should be removed from the Git repository post-release.

#### Who removes these Git Branches

Ideally, the one who deletes upstream has access to push to tails.git. If we would chose for having the release manager do this, it can be done post-merge and it wouldn't require people from the sysadmin team to step in and issue a command.

#### What kind of privileges are required to do that?

Push access to tails.git.

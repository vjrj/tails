[[!toc levels=2]]

Related pages
=============

* [[!tails_ticket 5525]]
* [[blueprint/Mandatory_Access_Control]]
* [[contribute/design/application_isolation]]
* `feature/5525-sandbox-web-browser` branch
* [nightly built images](http://nightly.tails.boum.org/build_Tails_ISO_feature-5525-sandbox-web-browser/)

Status
======

## documentation

* Document where users can download files, e.g.
  on [[doc/anonymous_internet/Tor_Browser]].
* Document that one should put files in that specific directory before
  submitting them for upload in the Tor Browser.

## automated test passes

(needs to be run again with current status of the branch at some point)

* feature/i2p (unconfined)
* feature/torified_browsing
* feature/unsafe_browser (unconfined)
* feature/windows_camouflage
* open `https://` URL from Pidgin
* relevant bits of feature/usb_install
  - view persistent bookmarks, in read-only persistence mode ([[!tails_ticket 8787]])
  - persistent bookmarks, RW
* "Tails documentation" link on the Desktop ([[!tails_ticket 8788]])

## manual test OK

(needs to be tested again with current status of the branch at some point)

* add NoScript exception
* change stuff in about:prefs
* manually update AdBlock Plus lists
* add a bookmark, with persistent bookmarks feature enabled, in
  read-only persistence mode

## manual test OK, maybe needs automated test

* HTML5 video and audio playback
* WebM video and audio playback

## known issues

Currently none.

## needs testing

* download to persistent `~/Persistent/Tor Browser`, in
  read-write persistence mode
* read from persistent `~/Persistent/Tor Browser`, in read-write
  persistence mode
* download to persistent `~/Persistent/Tor Browser`, in
  read-only persistence mode
* read from persistent `~/Persistent/Tor Browser`, in read-only
  persistence mode
* default download directory is `~/Tor Browser`
* download to amnesiac `~/Tor Browser`
* read from amnesiac `~/Tor Browser`
* default upload directory is `~/Tor Browser/`
* `~/Tor Browser/` must always exist
* there must always be a GTK bookmark to `~/Tor Browser/`
* when `~/Persistent/` is persistent read-write, then
  `~/Persistent/Tor Browser` must exist and there must be
  a GNOME bookmark pointing to it
* import OpenPGP key from website:
  - clicking on the "Tails signing key" link in Tails 1.2.3 leads in
    a dialog whose default is "Open with Import Key"
  - this is provided by `seahorse-pgp-keys.desktop`, that execs
    `seahorse-tool --import`
* install a Firefox add-on (this does not mean we actively support that, right? :)
* printing

<a id="ux"></a>

User experience matters
=======================

Downloading files
-----------------

No good way exists (yet) to let the user choose a specific file to
upload, or download directory, each time they want to do that (this is
work-in-progress in AppArmor upstream, with a mediation layer between
applications, the GTK file chooser and the filesystem -- some day we
can solve this problem in better ways, but we're not there yet).

So, once we confine Tor Browser with AppArmor in Tails 1.3:

* either we allow the Tor Browser to read and write everywhere in
  the home and persistent directory: would entirely defeat the purpose
  of confining it in the first place, so that's a no-no;
* or, we allow the Tor Browser to read/write files from/to one
  specific directory (e.g. `/home/amnesia/Downloads/`).

I see no better solution than the latter, so the following assumes
that we'll go with it. So, a first question is: what name should this
directory have? (Wait, other constraints about this are exposed
below).

Now, let's say we have a downloads/uploads directory that's shared
between the Tor Browser, the file browser, and all non-confined
applications. We have a usability issue: the space available in that
directory is limited by the free system memory (RAM). So in practice,
if one starts downloading a large file in there, worst case the
download will fail at some point during the download, best case the
browser will tell the user that there's not enough space available
there before they are allowed to confirm the destination directory for
the download.

[Side-note: I believe we have no simple mean to adjust the browser's
behaviour in this area, at least not on the short term, so I've not
checked how exactly it behaves right now — perhaps that would be
a good research project on the long term, but on the other hand on the
long term we'll have even better solutions showing up, as explained
above, so IMO this shouldn't block confining the Tor Browser
in Tails.]

The obvious (and easiest to implement) solution to this would be to
add a persistence setting for `~/Downloads/` (called "Browser
Downloads", subtitled "Downloads from the Tor Browser", akin to the
"Browser Bookmarks" we already have), and to add a GNOME bookmark
called "Downloads" when the Downloads persistence feature is enabled.
However, having downloads be either always amnesiac or always
persistent (unless you restart or do stuff outside of the browser)
seems like a regression, since it breaks one of the core Tails
properties. And forcing it to be a persistent folder by default
actually has security issues since secure deletion don't work as
expected on flash memory. So, users should still have the option to
download either to an amnesiac (by default) or persistent place, like
it is the case now.

So we give Tor Browser access to:

* `~/Tor Browser` (that would be amnesiac, as everything else in
  Tails by default)
* `~/Persistent/Tor Browser` (that would be persistent, and only
  created when `~/Persistent/` is made persistent)

Note that we don't call them "Downloads", because e.g. if someone
writes an ODT text and wants to upload it, having to move it to
a folder called "Downloads" sounds really weird.

Remaining questions:

1. What to do about alternative browsers (I2P and Unsafe Browser)?
   We have [[!tails_ticket 8280 desc="a ticket"]] about allowing the
   I2P Browser to access local files. Shall we use e.g. `~/Tor Browser
   files/`, `~/I2P Browser files/` and `~/Unsafe Brower files/` (the
   latter may make sense now that we plan to move the LAN browsing
   support into the Unsafe Browser) — and equivalently,
   `~/Persistent/Tor Browser/`, etc.? or rather a single
   shared namespace, with e.g. `~/Browser files/Tor Browser`,
   `~/Browser files/I2P Browser`, etc.?
   
   In any case, of course we should _not_ allow a given browser to
   access files in other browsers' own download directory (this would
   be too much of a linkability and de-anonymization risk)

2. The "New Identity" problem. The Tor Browser tries hard to prevent
   data to persist once its "New Identity" button has been clicked, to
   prevent activities performed before and after this action to be
   linked with each other. As boyska (a Freepto developer) made me
   realize while we were discussing these problems, by introducing
   a persistent downloads directory, we somewhat break this design
   goal. Of course, we've never even tried protecting against this
   specific attack, so maybe we can just ignore it for now. And the
   Tor Browser doesn't try either -- once they add sandboxing
   profiles, I bet they'll need to think about that too, so one way to
   do it would be to start a discussion with them about this problem,
   and consider it as a non-blocker for now. One idea we had with
   boyska was to add a confirmation dialog when one clicks the "New
   Identity" button in the Tor Browser, that makes it clear what's
   going to be lost (e.g. tabs and clipboard, which surprises a lot of
   users in my experience, see [[!tails_ticket 7709]]), warns them
   that their previous downloads will be deleted, or rather moved to
   a directory where that the Tor Browser hasn't access to.
   Another idea is to block the "New Identity" until the user has
   themselves emptied the browser files directory, e.g.:
   
       When I click on "New Identity" while there are files in one
            of the downloads directories
       Then I'm told "Tor Browser will be reset to a New Identity
            once you have emptied folders $x and $y"
       And then, once I have emptied the download directories
       Then Tor Browser is reset to a New Identity
   
   Food for thought.

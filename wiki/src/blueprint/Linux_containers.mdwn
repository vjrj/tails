**Corresponding tickets**: [[!tails_ticket 6178]] and friends.

[[!toc levels=2]]

Background
==========

User namespaces eventually made their way into the 3.8 kernel:
<https://lwn.net/Articles/531114/>.

Threat model
============

* filesystem isolation?
* X isolation? (e.g. keyloggers)
* network isolation?
* privilege escalation via holes in Linux?
* privilege escalation via already running privileged daemons, or
  setuid/setgid binaries?

Tools to manage containers
==========================

* LXC
* `unshare(1)`
* [pflask](https://github.com/ghedo/pflask) automates the creation of
  simple Linux containers based on them; it is e.g. used by
  [pflask-debuild](https://github.com/ghedo/pflask/blob/master/tools/pflask-debuild)
* systemd-nspawn
* Docker, that we're [[evaluating|blueprint/evaluate_Docker]] as
  a candidate to replace Vagrant in our easy build system

Running GUI applications in containers
======================================

We're told that Subgraph OS will use LXC + xpra. In this vein:

* <http://pleonasm.info/blog/2012/10/privilege-separation-with-xpra/>
* [docker-desktop](https://github.com/rogaha/docker-desktop)
* St√©phane Graber's [LXC 1.0 blog post
  series](https://www.stgraber.org/2013/12/20/lxc-1-0-blog-post-series/),
  and especially [GUI in
  containers](https://www.stgraber.org/2014/02/09/lxc-1-0-gui-in-containers/)
* <https://unix.stackexchange.com/questions/134939/x-and-xdotool-in-lxc-instead-of-kvm>
* <https://stackoverflow.com/questions/16296753/can-you-run-gui-apps-in-a-docker>

Other resources
===============

* <http://doger.io/> documents in details the current state of Linux
  containers (namespaces) and of the various userspace implementations
